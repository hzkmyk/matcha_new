{"ast":null,"code":"var _jsxFileName = \"/Users/hazukimiyake/Documents/matcha/src/InitialProfile/Photos/index.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport Button from '@material-ui/core/Button';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport './index.css';\n\nconst {\n  imageData\n} = require('../../matcha_pb');\n\nclass InitialPhoto extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sendImage = files => {\n      const request = new imageData();\n      let index = 1;\n      console.log(files.result);\n      files.forEach(element => {\n        request.setImage(element);\n        request.setIndex(index);\n        index++;\n      });\n      const uid = this.props.cookies.get('uid');\n      const temp = this.props.cookies.get('session_id');\n      const metadata = {\n        'user_id': uid,\n        'session_id': temp\n      };\n      console.log('aa');\n      window.Aclient.updateImage(request, metadata, (err, reply) => {\n        if (err) {\n          console.log(err.code);\n          console.log(err.message);\n        } else {// console.log(reply.getMessage());\n        }\n      });\n    };\n\n    this.state = {\n      open: false\n    };\n  }\n\n  // componentDidMount() {\n  // \tthis.sendImage();\n  // }\n  handleOpen() {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleSave(files) {\n    console.log('save', files);\n    this.setState({\n      files: files,\n      open: false\n    });\n    this.sendImage(files);\n  }\n\n  handleClose() {\n    this.setState({\n      open: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"aside\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Photos of You\"), React.createElement(\"div\", {\n      className: \"imagearea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addplusmax\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"addimages\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Button, {\n      id: \"iii\",\n      onClick: this.handleOpen.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Add Image\"), React.createElement(DropzoneDialog, {\n      open: this.state.open,\n      onSave: this.handleSave.bind(this),\n      acceptedFiles: ['image/jpeg', 'image/jpg', 'image/png', 'image/bmp'],\n      showPreviews: true,\n      maxFileSize: 5000000,\n      onClose: this.handleClose.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      id: \"max\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"*Maximum 5\")), React.createElement(\"div\", {\n      className: \"nailarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withCookies(InitialPhoto);","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/src/InitialProfile/Photos/index.js"],"names":["React","Component","withCookies","Button","DropzoneDialog","imageData","require","InitialPhoto","constructor","props","sendImage","files","request","index","console","log","result","forEach","element","setImage","setIndex","uid","cookies","get","temp","metadata","window","Aclient","updateImage","err","reply","code","message","state","open","handleOpen","setState","handleSave","handleClose","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport Button from '@material-ui/core/Button';\nimport { DropzoneDialog } from 'material-ui-dropzone';\nimport './index.css';\nconst { imageData } = require('../../matcha_pb');\n\nclass InitialPhoto extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\topen: false\n\t\t}\n\t}\n\t\n\tsendImage = (files) => {\n\t\tconst request = new imageData();\n\t\tlet index = 1;\n\t\tconsole.log(files.result);\n\t\tfiles.forEach(element => {\n\t\t\trequest.setImage(element);\n\t\t\trequest.setIndex(index);\n\t\t\tindex++;\n\t\t});\n\t\tconst uid = this.props.cookies.get('uid');\n\t\tconst temp = this.props.cookies.get('session_id');\n\t\tconst metadata = {\n\t\t\t'user_id': uid,\n\t\t\t'session_id': temp\n\t\t}\n\t\tconsole.log('aa');\n\t\twindow.Aclient.updateImage(request, metadata, (err, reply) => {\n\t\t\tif (err) {\n\t\t\t\tconsole.log(err.code);\n\t\t\t\tconsole.log(err.message);\n\t\t\t} else {\n\t\t\t\t// console.log(reply.getMessage());\n\t\t\t}\n\t\t})\n\t}\n\t\n\t// componentDidMount() {\n\t// \tthis.sendImage();\n\t// }\n\t\n\thandleOpen() {\n\t\tthis.setState({\n\t\t\topen: true,\n\t\t});\n\t}\n\t\n\thandleSave(files) {\n\t\tconsole.log('save', files);\n\t\tthis.setState({\n\t\t\tfiles: files, \n\t\t\topen: false\n\t\t});\n\t\tthis.sendImage(files);\n\t}\n\n\thandleClose() {\n\t\tthis.setState({\n\t\t\t\topen: false\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<aside className='title'>Photos of You</aside>\n\t\t\t\t<div className='imagearea'>\n\t\t\t\t\t<div className='addplusmax'>\n\t\t\t\t\t\t<div className='addimages'>\n\t\t\t\t\t\t\t<Button id='iii' onClick={this.handleOpen.bind(this)}>\n\t\t\t\t\t\t\t\tAdd Image\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<DropzoneDialog\n\t\t\t\t\t\t\t\topen={this.state.open}\n\t\t\t\t\t\t\t\tonSave={this.handleSave.bind(this)}\n\t\t\t\t\t\t\t\tacceptedFiles={['image/jpeg', 'image/jpg', 'image/png', 'image/bmp']}\n\t\t\t\t\t\t\t\tshowPreviews={true}\n\t\t\t\t\t\t\t\tmaxFileSize={5000000}\n\t\t\t\t\t\t\t\tonClose={this.handleClose.bind(this)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div id='max'>*Maximum 5</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='nailarea'>\n\t\t\t\t\t\t{/* {this.state.pics.map(pic => (\n\t\t\t\t\t\t\t<img src={`http://localhost:8000/api${pic.file}`}  width={100} height={65}/>\n\t\t\t\t\t\t))} */}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withCookies(InitialPhoto);"]},"metadata":{},"sourceType":"module"}