{"ast":null,"code":"// source: src/matcha.proto\n\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nvar jspb = require('google-protobuf');\n\nvar goog = jspb;\nvar global = Function('return this')();\ngoog.exportSymbol('proto.matcha.Reply', null, global);\ngoog.exportSymbol('proto.matcha.Session', null, global);\ngoog.exportSymbol('proto.matcha.User', null, global);\ngoog.exportSymbol('proto.matcha.createRequest', null, global);\ngoog.exportSymbol('proto.matcha.empty', null, global);\ngoog.exportSymbol('proto.matcha.imageData', null, global);\ngoog.exportSymbol('proto.matcha.loginRequest', null, global);\ngoog.exportSymbol('proto.matcha.resetPassRequest', null, global);\ngoog.exportSymbol('proto.matcha.sendEmailRequest', null, global);\ngoog.exportSymbol('proto.matcha.verifyRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\nproto.matcha.resetPassRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.resetPassRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.resetPassRequest.displayName = 'proto.matcha.resetPassRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.sendEmailRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.sendEmailRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.sendEmailRequest.displayName = 'proto.matcha.sendEmailRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.createRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.createRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.createRequest.displayName = 'proto.matcha.createRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.verifyRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.verifyRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.verifyRequest.displayName = 'proto.matcha.verifyRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.imageData = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.imageData, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.imageData.displayName = 'proto.matcha.imageData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.empty = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.empty, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.empty.displayName = 'proto.matcha.empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.loginRequest = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.loginRequest, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.loginRequest.displayName = 'proto.matcha.loginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.User = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.matcha.User.repeatedFields_, null);\n};\n\ngoog.inherits(proto.matcha.User, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.User.displayName = 'proto.matcha.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.Session = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.Session, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.Session.displayName = 'proto.matcha.Session';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\n\n\nproto.matcha.Reply = function (opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\n\ngoog.inherits(proto.matcha.Reply, jspb.Message);\n\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.Reply.displayName = 'proto.matcha.Reply';\n}\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.resetPassRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.resetPassRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.resetPassRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.resetPassRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      newpass: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      hash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.resetPassRequest}\n */\n\n\nproto.matcha.resetPassRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.resetPassRequest();\n  return proto.matcha.resetPassRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.resetPassRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.resetPassRequest}\n */\n\n\nproto.matcha.resetPassRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setNewpass(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.resetPassRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.resetPassRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.resetPassRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.resetPassRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getNewpass();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getHash();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n};\n/**\n * optional string email = 1;\n * @return {string}\n */\n\n\nproto.matcha.resetPassRequest.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\n\n\nproto.matcha.resetPassRequest.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string newPass = 2;\n * @return {string}\n */\n\n\nproto.matcha.resetPassRequest.prototype.getNewpass = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\n\n\nproto.matcha.resetPassRequest.prototype.setNewpass = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string hash = 3;\n * @return {string}\n */\n\n\nproto.matcha.resetPassRequest.prototype.getHash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\n\n\nproto.matcha.resetPassRequest.prototype.setHash = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.sendEmailRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.sendEmailRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.sendEmailRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.sendEmailRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      email: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.sendEmailRequest}\n */\n\n\nproto.matcha.sendEmailRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.sendEmailRequest();\n  return proto.matcha.sendEmailRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.sendEmailRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.sendEmailRequest}\n */\n\n\nproto.matcha.sendEmailRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.sendEmailRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.sendEmailRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.sendEmailRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.sendEmailRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string email = 1;\n * @return {string}\n */\n\n\nproto.matcha.sendEmailRequest.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.sendEmailRequest} returns this\n */\n\n\nproto.matcha.sendEmailRequest.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.createRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.createRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.createRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.createRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.createRequest}\n */\n\n\nproto.matcha.createRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.createRequest();\n  return proto.matcha.createRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.createRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.createRequest}\n */\n\n\nproto.matcha.createRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUsername(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFirstname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setLastname(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.createRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.createRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.createRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.createRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getFirstname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getLastname();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n};\n/**\n * optional string userName = 1;\n * @return {string}\n */\n\n\nproto.matcha.createRequest.prototype.getUsername = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\n\n\nproto.matcha.createRequest.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string firstName = 2;\n * @return {string}\n */\n\n\nproto.matcha.createRequest.prototype.getFirstname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\n\n\nproto.matcha.createRequest.prototype.setFirstname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string lastName = 3;\n * @return {string}\n */\n\n\nproto.matcha.createRequest.prototype.getLastname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\n\n\nproto.matcha.createRequest.prototype.setLastname = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.matcha.createRequest.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\n\n\nproto.matcha.createRequest.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string email = 5;\n * @return {string}\n */\n\n\nproto.matcha.createRequest.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\n\n\nproto.matcha.createRequest.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.verifyRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.verifyRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.verifyRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.verifyRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      hash: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.verifyRequest}\n */\n\n\nproto.matcha.verifyRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.verifyRequest();\n  return proto.matcha.verifyRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.verifyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.verifyRequest}\n */\n\n\nproto.matcha.verifyRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHash(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.verifyRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.verifyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.verifyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.verifyRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getHash();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string email = 1;\n * @return {string}\n */\n\n\nproto.matcha.verifyRequest.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.verifyRequest} returns this\n */\n\n\nproto.matcha.verifyRequest.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string hash = 2;\n * @return {string}\n */\n\n\nproto.matcha.verifyRequest.prototype.getHash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.verifyRequest} returns this\n */\n\n\nproto.matcha.verifyRequest.prototype.setHash = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.imageData.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.imageData.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.imageData} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.imageData.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      image: msg.getImage_asB64()\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.imageData}\n */\n\n\nproto.matcha.imageData.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.imageData();\n  return proto.matcha.imageData.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.imageData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.imageData}\n */\n\n\nproto.matcha.imageData.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {!Uint8Array} */\n        reader.readBytes();\n        msg.setImage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.imageData.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.imageData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.imageData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.imageData.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getImage_asU8();\n\n  if (f.length > 0) {\n    writer.writeBytes(1, f);\n  }\n};\n/**\n * optional bytes image = 1;\n * @return {string}\n */\n\n\nproto.matcha.imageData.prototype.getImage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * optional bytes image = 1;\n * This is a type-conversion wrapper around `getImage()`\n * @return {string}\n */\n\n\nproto.matcha.imageData.prototype.getImage_asB64 = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.bytesAsB64(this.getImage())\n  );\n};\n/**\n * optional bytes image = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImage()`\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.imageData.prototype.getImage_asU8 = function () {\n  return (\n    /** @type {!Uint8Array} */\n    jspb.Message.bytesAsU8(this.getImage())\n  );\n};\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.matcha.imageData} returns this\n */\n\n\nproto.matcha.imageData.prototype.setImage = function (value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.empty.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.empty.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.empty} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.empty.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {};\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.empty}\n */\n\n\nproto.matcha.empty.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.empty();\n  return proto.matcha.empty.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.empty}\n */\n\n\nproto.matcha.empty.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.empty.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.empty.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.loginRequest.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.loginRequest.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.loginRequest} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.loginRequest.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.loginRequest}\n */\n\n\nproto.matcha.loginRequest.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.loginRequest();\n  return proto.matcha.loginRequest.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.loginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.loginRequest}\n */\n\n\nproto.matcha.loginRequest.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUsername(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.loginRequest.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.loginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.loginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.loginRequest.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional string userName = 1;\n * @return {string}\n */\n\n\nproto.matcha.loginRequest.prototype.getUsername = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.loginRequest} returns this\n */\n\n\nproto.matcha.loginRequest.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string password = 2;\n * @return {string}\n */\n\n\nproto.matcha.loginRequest.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.loginRequest} returns this\n */\n\n\nproto.matcha.loginRequest.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\n\n\nproto.matcha.User.repeatedFields_ = [10];\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.User.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.User.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.User} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.User.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n      firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n      lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n      password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n      email: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n      gender: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n      preference: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n      bio: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n      hash: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n      tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.User}\n */\n\n\nproto.matcha.User.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.User();\n  return proto.matcha.User.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.User}\n */\n\n\nproto.matcha.User.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setUsername(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setFirstname(value);\n        break;\n\n      case 3:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setLastname(value);\n        break;\n\n      case 4:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPassword(value);\n        break;\n\n      case 5:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setEmail(value);\n        break;\n\n      case 6:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setGender(value);\n        break;\n\n      case 7:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setPreference(value);\n        break;\n\n      case 8:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setBio(value);\n        break;\n\n      case 9:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setHash(value);\n        break;\n\n      case 10:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.addTags(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.User.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.User.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n\n  f = message.getFirstname();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n\n  f = message.getLastname();\n\n  if (f.length > 0) {\n    writer.writeString(3, f);\n  }\n\n  f = message.getPassword();\n\n  if (f.length > 0) {\n    writer.writeString(4, f);\n  }\n\n  f = message.getEmail();\n\n  if (f.length > 0) {\n    writer.writeString(5, f);\n  }\n\n  f = message.getGender();\n\n  if (f.length > 0) {\n    writer.writeString(6, f);\n  }\n\n  f = message.getPreference();\n\n  if (f.length > 0) {\n    writer.writeString(7, f);\n  }\n\n  f = message.getBio();\n\n  if (f.length > 0) {\n    writer.writeString(8, f);\n  }\n\n  f = message.getHash();\n\n  if (f.length > 0) {\n    writer.writeString(9, f);\n  }\n\n  f = message.getTagsList();\n\n  if (f.length > 0) {\n    writer.writeRepeatedString(10, f);\n  }\n};\n/**\n * optional string userName = 1;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getUsername = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setUsername = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n/**\n * optional string firstName = 2;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getFirstname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setFirstname = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n/**\n * optional string lastName = 3;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getLastname = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 3, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setLastname = function (value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n/**\n * optional string password = 4;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getPassword = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 4, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setPassword = function (value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n/**\n * optional string email = 5;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getEmail = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 5, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setEmail = function (value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n/**\n * optional string gender = 6;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getGender = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 6, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setGender = function (value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n/**\n * optional string preference = 7;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getPreference = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 7, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setPreference = function (value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n/**\n * optional string bio = 8;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getBio = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 8, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setBio = function (value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n/**\n * optional string hash = 9;\n * @return {string}\n */\n\n\nproto.matcha.User.prototype.getHash = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 9, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setHash = function (value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n/**\n * repeated string tags = 10;\n * @return {!Array<string>}\n */\n\n\nproto.matcha.User.prototype.getTagsList = function () {\n  return (\n    /** @type {!Array<string>} */\n    jspb.Message.getRepeatedField(this, 10)\n  );\n};\n/**\n * @param {!Array<string>} value\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.setTagsList = function (value) {\n  return jspb.Message.setField(this, 10, value || []);\n};\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.addTags = function (value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);\n};\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.matcha.User} returns this\n */\n\n\nproto.matcha.User.prototype.clearTagsList = function () {\n  return this.setTagsList([]);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.Session.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.Session.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.Session} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.Session.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n      sessionid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.Session}\n */\n\n\nproto.matcha.Session.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.Session();\n  return proto.matcha.Session.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.Session} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.Session}\n */\n\n\nproto.matcha.Session.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {number} */\n        reader.readInt32();\n        msg.setUserid(value);\n        break;\n\n      case 2:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setSessionid(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.Session.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.Session.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.Session} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.Session.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n\n  if (f !== 0) {\n    writer.writeInt32(1, f);\n  }\n\n  f = message.getSessionid();\n\n  if (f.length > 0) {\n    writer.writeString(2, f);\n  }\n};\n/**\n * optional int32 userID = 1;\n * @return {number}\n */\n\n\nproto.matcha.Session.prototype.getUserid = function () {\n  return (\n    /** @type {number} */\n    jspb.Message.getFieldWithDefault(this, 1, 0)\n  );\n};\n/**\n * @param {number} value\n * @return {!proto.matcha.Session} returns this\n */\n\n\nproto.matcha.Session.prototype.setUserid = function (value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n/**\n * optional string sessionID = 2;\n * @return {string}\n */\n\n\nproto.matcha.Session.prototype.getSessionid = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 2, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.Session} returns this\n */\n\n\nproto.matcha.Session.prototype.setSessionid = function (value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n  /**\n   * Creates an object representation of this proto.\n   * Field names that are reserved in JavaScript and will be renamed to pb_name.\n   * Optional fields that are not set will be set to undefined.\n   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n   * For the list of reserved names please see:\n   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n   * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n   *     JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @return {!Object}\n   */\n  proto.matcha.Reply.prototype.toObject = function (opt_includeInstance) {\n    return proto.matcha.Reply.toObject(opt_includeInstance, this);\n  };\n  /**\n   * Static version of the {@see toObject} method.\n   * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n   *     the JSPB instance for transitional soy proto support:\n   *     http://goto/soy-param-migration\n   * @param {!proto.matcha.Reply} msg The msg instance to transform.\n   * @return {!Object}\n   * @suppress {unusedLocalVariables} f is only used for nested messages\n   */\n\n\n  proto.matcha.Reply.toObject = function (includeInstance, msg) {\n    var f,\n        obj = {\n      message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n    };\n\n    if (includeInstance) {\n      obj.$jspbMessageInstance = msg;\n    }\n\n    return obj;\n  };\n}\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.Reply}\n */\n\n\nproto.matcha.Reply.deserializeBinary = function (bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.Reply();\n  return proto.matcha.Reply.deserializeBinaryFromReader(msg, reader);\n};\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.Reply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.Reply}\n */\n\n\nproto.matcha.Reply.deserializeBinaryFromReader = function (msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n\n    var field = reader.getFieldNumber();\n\n    switch (field) {\n      case 1:\n        var value =\n        /** @type {string} */\n        reader.readString();\n        msg.setMessage(value);\n        break;\n\n      default:\n        reader.skipField();\n        break;\n    }\n  }\n\n  return msg;\n};\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\n\n\nproto.matcha.Reply.prototype.serializeBinary = function () {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.Reply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.Reply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\n\n\nproto.matcha.Reply.serializeBinaryToWriter = function (message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n\n  if (f.length > 0) {\n    writer.writeString(1, f);\n  }\n};\n/**\n * optional string message = 1;\n * @return {string}\n */\n\n\nproto.matcha.Reply.prototype.getMessage = function () {\n  return (\n    /** @type {string} */\n    jspb.Message.getFieldWithDefault(this, 1, \"\")\n  );\n};\n/**\n * @param {string} value\n * @return {!proto.matcha.Reply} returns this\n */\n\n\nproto.matcha.Reply.prototype.setMessage = function (value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\ngoog.object.extend(exports, proto.matcha);","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/src/matcha_pb.js"],"names":["jspb","require","goog","global","Function","exportSymbol","proto","matcha","resetPassRequest","opt_data","Message","initialize","inherits","DEBUG","COMPILED","displayName","sendEmailRequest","createRequest","verifyRequest","imageData","empty","loginRequest","User","repeatedFields_","Session","Reply","GENERATE_TO_OBJECT","prototype","toObject","opt_includeInstance","includeInstance","msg","f","obj","email","getFieldWithDefault","newpass","hash","$jspbMessageInstance","deserializeBinary","bytes","reader","BinaryReader","deserializeBinaryFromReader","nextField","isEndGroup","field","getFieldNumber","value","readString","setEmail","setNewpass","setHash","skipField","serializeBinary","writer","BinaryWriter","serializeBinaryToWriter","getResultBuffer","message","undefined","getEmail","length","writeString","getNewpass","getHash","setProto3StringField","username","firstname","lastname","password","setUsername","setFirstname","setLastname","setPassword","getUsername","getFirstname","getLastname","getPassword","image","getImage_asB64","readBytes","setImage","getImage_asU8","writeBytes","getImage","bytesAsB64","bytesAsU8","setProto3BytesField","gender","preference","bio","tagsList","getRepeatedField","setGender","setPreference","setBio","addTags","getGender","getPreference","getBio","getTagsList","writeRepeatedString","setTagsList","setField","opt_index","addToRepeatedField","clearTagsList","userid","sessionid","readInt32","setUserid","setSessionid","getUserid","writeInt32","getSessionid","setProto3IntField","setMessage","getMessage","object","extend","exports"],"mappings":"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","sourcesContent":["// source: src/matcha.proto\n/**\n * @fileoverview\n * @enhanceable\n * @suppress {messageConventions} JS Compiler reports an error if a variable or\n *     field starts with 'MSG_' and isn't a translatable message.\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\nvar jspb = require('google-protobuf');\nvar goog = jspb;\nvar global = Function('return this')();\n\ngoog.exportSymbol('proto.matcha.Reply', null, global);\ngoog.exportSymbol('proto.matcha.Session', null, global);\ngoog.exportSymbol('proto.matcha.User', null, global);\ngoog.exportSymbol('proto.matcha.createRequest', null, global);\ngoog.exportSymbol('proto.matcha.empty', null, global);\ngoog.exportSymbol('proto.matcha.imageData', null, global);\ngoog.exportSymbol('proto.matcha.loginRequest', null, global);\ngoog.exportSymbol('proto.matcha.resetPassRequest', null, global);\ngoog.exportSymbol('proto.matcha.sendEmailRequest', null, global);\ngoog.exportSymbol('proto.matcha.verifyRequest', null, global);\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.resetPassRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.resetPassRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.resetPassRequest.displayName = 'proto.matcha.resetPassRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.sendEmailRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.sendEmailRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.sendEmailRequest.displayName = 'proto.matcha.sendEmailRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.createRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.createRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.createRequest.displayName = 'proto.matcha.createRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.verifyRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.verifyRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.verifyRequest.displayName = 'proto.matcha.verifyRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.imageData = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.imageData, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.imageData.displayName = 'proto.matcha.imageData';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.empty = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.empty, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.empty.displayName = 'proto.matcha.empty';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.loginRequest = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.loginRequest, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.loginRequest.displayName = 'proto.matcha.loginRequest';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.User = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, proto.matcha.User.repeatedFields_, null);\n};\ngoog.inherits(proto.matcha.User, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.User.displayName = 'proto.matcha.User';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.Session = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.Session, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.Session.displayName = 'proto.matcha.Session';\n}\n/**\n * Generated by JsPbCodeGenerator.\n * @param {Array=} opt_data Optional initial data array, typically from a\n * server response, or constructed directly in Javascript. The array is used\n * in place and becomes part of the constructed object. It is not cloned.\n * If no data is provided, the constructed object will be empty, but still\n * valid.\n * @extends {jspb.Message}\n * @constructor\n */\nproto.matcha.Reply = function(opt_data) {\n  jspb.Message.initialize(this, opt_data, 0, -1, null, null);\n};\ngoog.inherits(proto.matcha.Reply, jspb.Message);\nif (goog.DEBUG && !COMPILED) {\n  /**\n   * @public\n   * @override\n   */\n  proto.matcha.Reply.displayName = 'proto.matcha.Reply';\n}\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.resetPassRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.resetPassRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.resetPassRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.resetPassRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    newpass: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    hash: jspb.Message.getFieldWithDefault(msg, 3, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.resetPassRequest}\n */\nproto.matcha.resetPassRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.resetPassRequest;\n  return proto.matcha.resetPassRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.resetPassRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.resetPassRequest}\n */\nproto.matcha.resetPassRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setNewpass(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.resetPassRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.resetPassRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.resetPassRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.resetPassRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getNewpass();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getHash();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.matcha.resetPassRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\nproto.matcha.resetPassRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string newPass = 2;\n * @return {string}\n */\nproto.matcha.resetPassRequest.prototype.getNewpass = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\nproto.matcha.resetPassRequest.prototype.setNewpass = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string hash = 3;\n * @return {string}\n */\nproto.matcha.resetPassRequest.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.resetPassRequest} returns this\n */\nproto.matcha.resetPassRequest.prototype.setHash = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.sendEmailRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.sendEmailRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.sendEmailRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.sendEmailRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.sendEmailRequest}\n */\nproto.matcha.sendEmailRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.sendEmailRequest;\n  return proto.matcha.sendEmailRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.sendEmailRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.sendEmailRequest}\n */\nproto.matcha.sendEmailRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.sendEmailRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.sendEmailRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.sendEmailRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.sendEmailRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.matcha.sendEmailRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.sendEmailRequest} returns this\n */\nproto.matcha.sendEmailRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.createRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.createRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.createRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.createRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 5, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.createRequest}\n */\nproto.matcha.createRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.createRequest;\n  return proto.matcha.createRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.createRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.createRequest}\n */\nproto.matcha.createRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.createRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.createRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.createRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.createRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userName = 1;\n * @return {string}\n */\nproto.matcha.createRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\nproto.matcha.createRequest.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string firstName = 2;\n * @return {string}\n */\nproto.matcha.createRequest.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\nproto.matcha.createRequest.prototype.setFirstname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string lastName = 3;\n * @return {string}\n */\nproto.matcha.createRequest.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\nproto.matcha.createRequest.prototype.setLastname = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.matcha.createRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\nproto.matcha.createRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string email = 5;\n * @return {string}\n */\nproto.matcha.createRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.createRequest} returns this\n */\nproto.matcha.createRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.verifyRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.verifyRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.verifyRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.verifyRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    email: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    hash: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.verifyRequest}\n */\nproto.matcha.verifyRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.verifyRequest;\n  return proto.matcha.verifyRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.verifyRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.verifyRequest}\n */\nproto.matcha.verifyRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHash(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.verifyRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.verifyRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.verifyRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.verifyRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getHash();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string email = 1;\n * @return {string}\n */\nproto.matcha.verifyRequest.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.verifyRequest} returns this\n */\nproto.matcha.verifyRequest.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string hash = 2;\n * @return {string}\n */\nproto.matcha.verifyRequest.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.verifyRequest} returns this\n */\nproto.matcha.verifyRequest.prototype.setHash = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.imageData.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.imageData.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.imageData} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.imageData.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    image: msg.getImage_asB64()\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.imageData}\n */\nproto.matcha.imageData.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.imageData;\n  return proto.matcha.imageData.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.imageData} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.imageData}\n */\nproto.matcha.imageData.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {!Uint8Array} */ (reader.readBytes());\n      msg.setImage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.imageData.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.imageData.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.imageData} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.imageData.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getImage_asU8();\n  if (f.length > 0) {\n    writer.writeBytes(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional bytes image = 1;\n * @return {string}\n */\nproto.matcha.imageData.prototype.getImage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * optional bytes image = 1;\n * This is a type-conversion wrapper around `getImage()`\n * @return {string}\n */\nproto.matcha.imageData.prototype.getImage_asB64 = function() {\n  return /** @type {string} */ (jspb.Message.bytesAsB64(\n      this.getImage()));\n};\n\n\n/**\n * optional bytes image = 1;\n * Note that Uint8Array is not supported on all browsers.\n * @see http://caniuse.com/Uint8Array\n * This is a type-conversion wrapper around `getImage()`\n * @return {!Uint8Array}\n */\nproto.matcha.imageData.prototype.getImage_asU8 = function() {\n  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(\n      this.getImage()));\n};\n\n\n/**\n * @param {!(string|Uint8Array)} value\n * @return {!proto.matcha.imageData} returns this\n */\nproto.matcha.imageData.prototype.setImage = function(value) {\n  return jspb.Message.setProto3BytesField(this, 1, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.empty.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.empty.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.empty} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.empty.toObject = function(includeInstance, msg) {\n  var f, obj = {\n\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.empty}\n */\nproto.matcha.empty.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.empty;\n  return proto.matcha.empty.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.empty} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.empty}\n */\nproto.matcha.empty.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.empty.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.empty.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.empty} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.empty.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.loginRequest.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.loginRequest.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.loginRequest} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.loginRequest.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.loginRequest}\n */\nproto.matcha.loginRequest.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.loginRequest;\n  return proto.matcha.loginRequest.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.loginRequest} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.loginRequest}\n */\nproto.matcha.loginRequest.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.loginRequest.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.loginRequest.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.loginRequest} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.loginRequest.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userName = 1;\n * @return {string}\n */\nproto.matcha.loginRequest.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.loginRequest} returns this\n */\nproto.matcha.loginRequest.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string password = 2;\n * @return {string}\n */\nproto.matcha.loginRequest.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.loginRequest} returns this\n */\nproto.matcha.loginRequest.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n/**\n * List of repeated fields within this message type.\n * @private {!Array<number>}\n * @const\n */\nproto.matcha.User.repeatedFields_ = [10];\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.User.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.User.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.User} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.User.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    username: jspb.Message.getFieldWithDefault(msg, 1, \"\"),\n    firstname: jspb.Message.getFieldWithDefault(msg, 2, \"\"),\n    lastname: jspb.Message.getFieldWithDefault(msg, 3, \"\"),\n    password: jspb.Message.getFieldWithDefault(msg, 4, \"\"),\n    email: jspb.Message.getFieldWithDefault(msg, 5, \"\"),\n    gender: jspb.Message.getFieldWithDefault(msg, 6, \"\"),\n    preference: jspb.Message.getFieldWithDefault(msg, 7, \"\"),\n    bio: jspb.Message.getFieldWithDefault(msg, 8, \"\"),\n    hash: jspb.Message.getFieldWithDefault(msg, 9, \"\"),\n    tagsList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.User}\n */\nproto.matcha.User.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.User;\n  return proto.matcha.User.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.User} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.User}\n */\nproto.matcha.User.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setUsername(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setFirstname(value);\n      break;\n    case 3:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setLastname(value);\n      break;\n    case 4:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPassword(value);\n      break;\n    case 5:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setEmail(value);\n      break;\n    case 6:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setGender(value);\n      break;\n    case 7:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setPreference(value);\n      break;\n    case 8:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setBio(value);\n      break;\n    case 9:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setHash(value);\n      break;\n    case 10:\n      var value = /** @type {string} */ (reader.readString());\n      msg.addTags(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.User.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.User.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.User} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.User.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUsername();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n  f = message.getFirstname();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n  f = message.getLastname();\n  if (f.length > 0) {\n    writer.writeString(\n      3,\n      f\n    );\n  }\n  f = message.getPassword();\n  if (f.length > 0) {\n    writer.writeString(\n      4,\n      f\n    );\n  }\n  f = message.getEmail();\n  if (f.length > 0) {\n    writer.writeString(\n      5,\n      f\n    );\n  }\n  f = message.getGender();\n  if (f.length > 0) {\n    writer.writeString(\n      6,\n      f\n    );\n  }\n  f = message.getPreference();\n  if (f.length > 0) {\n    writer.writeString(\n      7,\n      f\n    );\n  }\n  f = message.getBio();\n  if (f.length > 0) {\n    writer.writeString(\n      8,\n      f\n    );\n  }\n  f = message.getHash();\n  if (f.length > 0) {\n    writer.writeString(\n      9,\n      f\n    );\n  }\n  f = message.getTagsList();\n  if (f.length > 0) {\n    writer.writeRepeatedString(\n      10,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string userName = 1;\n * @return {string}\n */\nproto.matcha.User.prototype.getUsername = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setUsername = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\n/**\n * optional string firstName = 2;\n * @return {string}\n */\nproto.matcha.User.prototype.getFirstname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setFirstname = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n/**\n * optional string lastName = 3;\n * @return {string}\n */\nproto.matcha.User.prototype.getLastname = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setLastname = function(value) {\n  return jspb.Message.setProto3StringField(this, 3, value);\n};\n\n\n/**\n * optional string password = 4;\n * @return {string}\n */\nproto.matcha.User.prototype.getPassword = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setPassword = function(value) {\n  return jspb.Message.setProto3StringField(this, 4, value);\n};\n\n\n/**\n * optional string email = 5;\n * @return {string}\n */\nproto.matcha.User.prototype.getEmail = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setEmail = function(value) {\n  return jspb.Message.setProto3StringField(this, 5, value);\n};\n\n\n/**\n * optional string gender = 6;\n * @return {string}\n */\nproto.matcha.User.prototype.getGender = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setGender = function(value) {\n  return jspb.Message.setProto3StringField(this, 6, value);\n};\n\n\n/**\n * optional string preference = 7;\n * @return {string}\n */\nproto.matcha.User.prototype.getPreference = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setPreference = function(value) {\n  return jspb.Message.setProto3StringField(this, 7, value);\n};\n\n\n/**\n * optional string bio = 8;\n * @return {string}\n */\nproto.matcha.User.prototype.getBio = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setBio = function(value) {\n  return jspb.Message.setProto3StringField(this, 8, value);\n};\n\n\n/**\n * optional string hash = 9;\n * @return {string}\n */\nproto.matcha.User.prototype.getHash = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setHash = function(value) {\n  return jspb.Message.setProto3StringField(this, 9, value);\n};\n\n\n/**\n * repeated string tags = 10;\n * @return {!Array<string>}\n */\nproto.matcha.User.prototype.getTagsList = function() {\n  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 10));\n};\n\n\n/**\n * @param {!Array<string>} value\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.setTagsList = function(value) {\n  return jspb.Message.setField(this, 10, value || []);\n};\n\n\n/**\n * @param {string} value\n * @param {number=} opt_index\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.addTags = function(value, opt_index) {\n  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);\n};\n\n\n/**\n * Clears the list making it empty but non-null.\n * @return {!proto.matcha.User} returns this\n */\nproto.matcha.User.prototype.clearTagsList = function() {\n  return this.setTagsList([]);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.Session.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.Session.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.Session} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.Session.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    userid: jspb.Message.getFieldWithDefault(msg, 1, 0),\n    sessionid: jspb.Message.getFieldWithDefault(msg, 2, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.Session}\n */\nproto.matcha.Session.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.Session;\n  return proto.matcha.Session.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.Session} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.Session}\n */\nproto.matcha.Session.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {number} */ (reader.readInt32());\n      msg.setUserid(value);\n      break;\n    case 2:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setSessionid(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.Session.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.Session.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.Session} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.Session.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getUserid();\n  if (f !== 0) {\n    writer.writeInt32(\n      1,\n      f\n    );\n  }\n  f = message.getSessionid();\n  if (f.length > 0) {\n    writer.writeString(\n      2,\n      f\n    );\n  }\n};\n\n\n/**\n * optional int32 userID = 1;\n * @return {number}\n */\nproto.matcha.Session.prototype.getUserid = function() {\n  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));\n};\n\n\n/**\n * @param {number} value\n * @return {!proto.matcha.Session} returns this\n */\nproto.matcha.Session.prototype.setUserid = function(value) {\n  return jspb.Message.setProto3IntField(this, 1, value);\n};\n\n\n/**\n * optional string sessionID = 2;\n * @return {string}\n */\nproto.matcha.Session.prototype.getSessionid = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.Session} returns this\n */\nproto.matcha.Session.prototype.setSessionid = function(value) {\n  return jspb.Message.setProto3StringField(this, 2, value);\n};\n\n\n\n\n\nif (jspb.Message.GENERATE_TO_OBJECT) {\n/**\n * Creates an object representation of this proto.\n * Field names that are reserved in JavaScript and will be renamed to pb_name.\n * Optional fields that are not set will be set to undefined.\n * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.\n * For the list of reserved names please see:\n *     net/proto2/compiler/js/internal/generator.cc#kKeyword.\n * @param {boolean=} opt_includeInstance Deprecated. whether to include the\n *     JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @return {!Object}\n */\nproto.matcha.Reply.prototype.toObject = function(opt_includeInstance) {\n  return proto.matcha.Reply.toObject(opt_includeInstance, this);\n};\n\n\n/**\n * Static version of the {@see toObject} method.\n * @param {boolean|undefined} includeInstance Deprecated. Whether to include\n *     the JSPB instance for transitional soy proto support:\n *     http://goto/soy-param-migration\n * @param {!proto.matcha.Reply} msg The msg instance to transform.\n * @return {!Object}\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.Reply.toObject = function(includeInstance, msg) {\n  var f, obj = {\n    message: jspb.Message.getFieldWithDefault(msg, 1, \"\")\n  };\n\n  if (includeInstance) {\n    obj.$jspbMessageInstance = msg;\n  }\n  return obj;\n};\n}\n\n\n/**\n * Deserializes binary data (in protobuf wire format).\n * @param {jspb.ByteSource} bytes The bytes to deserialize.\n * @return {!proto.matcha.Reply}\n */\nproto.matcha.Reply.deserializeBinary = function(bytes) {\n  var reader = new jspb.BinaryReader(bytes);\n  var msg = new proto.matcha.Reply;\n  return proto.matcha.Reply.deserializeBinaryFromReader(msg, reader);\n};\n\n\n/**\n * Deserializes binary data (in protobuf wire format) from the\n * given reader into the given message object.\n * @param {!proto.matcha.Reply} msg The message object to deserialize into.\n * @param {!jspb.BinaryReader} reader The BinaryReader to use.\n * @return {!proto.matcha.Reply}\n */\nproto.matcha.Reply.deserializeBinaryFromReader = function(msg, reader) {\n  while (reader.nextField()) {\n    if (reader.isEndGroup()) {\n      break;\n    }\n    var field = reader.getFieldNumber();\n    switch (field) {\n    case 1:\n      var value = /** @type {string} */ (reader.readString());\n      msg.setMessage(value);\n      break;\n    default:\n      reader.skipField();\n      break;\n    }\n  }\n  return msg;\n};\n\n\n/**\n * Serializes the message to binary data (in protobuf wire format).\n * @return {!Uint8Array}\n */\nproto.matcha.Reply.prototype.serializeBinary = function() {\n  var writer = new jspb.BinaryWriter();\n  proto.matcha.Reply.serializeBinaryToWriter(this, writer);\n  return writer.getResultBuffer();\n};\n\n\n/**\n * Serializes the given message to binary data (in protobuf wire\n * format), writing to the given BinaryWriter.\n * @param {!proto.matcha.Reply} message\n * @param {!jspb.BinaryWriter} writer\n * @suppress {unusedLocalVariables} f is only used for nested messages\n */\nproto.matcha.Reply.serializeBinaryToWriter = function(message, writer) {\n  var f = undefined;\n  f = message.getMessage();\n  if (f.length > 0) {\n    writer.writeString(\n      1,\n      f\n    );\n  }\n};\n\n\n/**\n * optional string message = 1;\n * @return {string}\n */\nproto.matcha.Reply.prototype.getMessage = function() {\n  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, \"\"));\n};\n\n\n/**\n * @param {string} value\n * @return {!proto.matcha.Reply} returns this\n */\nproto.matcha.Reply.prototype.setMessage = function(value) {\n  return jspb.Message.setProto3StringField(this, 1, value);\n};\n\n\ngoog.object.extend(exports, proto.matcha);\n"]},"metadata":{},"sourceType":"module"}