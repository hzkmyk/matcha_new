{"ast":null,"code":"var _jsxFileName = \"/Users/hazukimiyake/Documents/matcha/src/Feed/index.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport LoggedHeader from '../LoggedHeader'; // const { empty } = require('../matcha_pb');\n\nclass Feed extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // readFeed = () => {\n  // \tconsole.log(`called`);\n  // \tconst request = new empty();\n  // \tconst uid = this.props.cookies.get('uid');\n  // \tconst temp = this.props.cookies.get('session_id');\n  // \t// request.setTagsList(['cat']);\n  // \t// request.setMaxage(20);\n  // \tconst metaData = {\n  // \t\t'user_id': uid,\n  // \t\t'session_id': temp\n  // \t}\n  // \tconst stream = window.Aclient.test2(request, metaData);\n  // \tstream.on('data', function(response) {\n  // \t\tconsole.log(response);\n  // \t});\n  // \tstream.on('error', function(err) {\n  // \t\tconsole.log(`error: ${err}`);\n  // \t});\n  // }\n  // readFeed = () => {\n  // \tconsole.log(`called`);\n  // \tconst request = new browseRequest();\n  // \tconst uid = this.props.cookies.get('uid');\n  // \tconst temp = this.props.cookies.get('session_id');\n  // \t// request.setTagsList(['cat']);\n  // \t// request.setMaxage(20);\n  // \tconst metaData = {\n  // \t\t'user_id': uid,\n  // \t\t'session_id': temp\n  // \t}\n  // \tconst stream = window.Aclient.feed(request, metaData);\n  // \tstream.on('data', function(response) {\n  // \t\tconsole.log(response);\n  // \t});\n  // \tstream.on('error', function(err) {\n  // \t\tconsole.log(`error: ${err}`);\n  // \t});\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withCookies(Feed);","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/src/Feed/index.js"],"names":["React","Component","withCookies","LoggedHeader","Feed","constructor","props","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,OAAOC,YAAP,MAAyB,iBAAzB,C,CACA;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC5BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,EAAb;AAGA,GAP2B,CAS5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAEAC,EAAAA,MAAM,GAAG;AACR,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAIA;;AAxD2B;;AA2D7B,eAAeN,WAAW,CAACE,IAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport LoggedHeader from '../LoggedHeader';\n// const { empty } = require('../matcha_pb');\n\nclass Feed extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\n\t\t}\n\t}\n\n\t// readFeed = () => {\n\t// \tconsole.log(`called`);\n\t// \tconst request = new empty();\n\t// \tconst uid = this.props.cookies.get('uid');\n\t// \tconst temp = this.props.cookies.get('session_id');\n\t// \t// request.setTagsList(['cat']);\n\t// \t// request.setMaxage(20);\n\t// \tconst metaData = {\n\t// \t\t'user_id': uid,\n\t// \t\t'session_id': temp\n\t// \t}\n\t// \tconst stream = window.Aclient.test2(request, metaData);\n\t// \tstream.on('data', function(response) {\n\t// \t\tconsole.log(response);\n\t// \t});\n\t// \tstream.on('error', function(err) {\n\t// \t\tconsole.log(`error: ${err}`);\n\t// \t});\n\t// }\n\n\t// readFeed = () => {\n\t// \tconsole.log(`called`);\n\t// \tconst request = new browseRequest();\n\t// \tconst uid = this.props.cookies.get('uid');\n\t// \tconst temp = this.props.cookies.get('session_id');\n\t// \t// request.setTagsList(['cat']);\n\t// \t// request.setMaxage(20);\n\t// \tconst metaData = {\n\t// \t\t'user_id': uid,\n\t// \t\t'session_id': temp\n\t// \t}\n\t// \tconst stream = window.Aclient.feed(request, metaData);\n\t// \tstream.on('data', function(response) {\n\t// \t\tconsole.log(response);\n\t// \t});\n\t// \tstream.on('error', function(err) {\n\t// \t\tconsole.log(`error: ${err}`);\n\t// \t});\n\n\n\t// }\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default withCookies(Feed);"]},"metadata":{},"sourceType":"module"}