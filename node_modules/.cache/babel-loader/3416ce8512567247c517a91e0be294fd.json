{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for matcha\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.matcha = require('./matcha_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.matcha.forgotPasswordClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.forgotPasswordPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.sendEmailRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_forgotPassword_sendEmail = new grpc.web.MethodDescriptor('/matcha.forgotPassword/sendEmail', grpc.web.MethodType.UNARY, proto.matcha.sendEmailRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.sendEmailRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.sendEmailRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_forgotPassword_sendEmail = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.sendEmailRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.sendEmailRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.forgotPasswordClient.prototype.sendEmail = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.forgotPassword/sendEmail', request, metadata || {}, methodDescriptor_forgotPassword_sendEmail, callback);\n};\n/**\n * @param {!proto.matcha.sendEmailRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.forgotPasswordPromiseClient.prototype.sendEmail = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.forgotPassword/sendEmail', request, metadata || {}, methodDescriptor_forgotPassword_sendEmail);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.resetPassRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_forgotPassword_resetPassword = new grpc.web.MethodDescriptor('/matcha.forgotPassword/resetPassword', grpc.web.MethodType.UNARY, proto.matcha.resetPassRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.resetPassRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.resetPassRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_forgotPassword_resetPassword = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.resetPassRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.resetPassRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.forgotPasswordClient.prototype.resetPassword = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.forgotPassword/resetPassword', request, metadata || {}, methodDescriptor_forgotPassword_resetPassword, callback);\n};\n/**\n * @param {!proto.matcha.resetPassRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.forgotPasswordPromiseClient.prototype.resetPassword = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.forgotPassword/resetPassword', request, metadata || {}, methodDescriptor_forgotPassword_resetPassword);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.createAccountClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.createAccountPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_createAccount_create = new grpc.web.MethodDescriptor('/matcha.createAccount/create', grpc.web.MethodType.UNARY, proto.matcha.createRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_createAccount_create = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.createAccountClient.prototype.create = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.createAccount/create', request, metadata || {}, methodDescriptor_createAccount_create, callback);\n};\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.createAccountPromiseClient.prototype.create = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.createAccount/create', request, metadata || {}, methodDescriptor_createAccount_create);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_createAccount_verify = new grpc.web.MethodDescriptor('/matcha.createAccount/verify', grpc.web.MethodType.UNARY, proto.matcha.verifyRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.verifyRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_createAccount_verify = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.verifyRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.createAccountClient.prototype.verify = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.createAccount/verify', request, metadata || {}, methodDescriptor_createAccount_verify, callback);\n};\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.createAccountPromiseClient.prototype.verify = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.createAccount/verify', request, metadata || {}, methodDescriptor_createAccount_verify);\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.AccountClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.AccountPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.User>}\n */\n\n\nconst methodDescriptor_Account_getUser = new grpc.web.MethodDescriptor('/matcha.Account/getUser', grpc.web.MethodType.UNARY, proto.matcha.userID, proto.matcha.User,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.User.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.User>}\n */\n\nconst methodInfo_Account_getUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.User,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.User.deserializeBinary);\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.User)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.getUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/getUser', request, metadata || {}, methodDescriptor_Account_getUser, callback);\n};\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.User>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.getUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/getUser', request, metadata || {}, methodDescriptor_Account_getUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.imageRequest,\n *   !proto.matcha.imageData>}\n */\n\n\nconst methodDescriptor_Account_getImages = new grpc.web.MethodDescriptor('/matcha.Account/getImages', grpc.web.MethodType.SERVER_STREAMING, proto.matcha.imageRequest, proto.matcha.imageData,\n/**\n * @param {!proto.matcha.imageRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.imageData.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.imageRequest,\n *   !proto.matcha.imageData>}\n */\n\nconst methodInfo_Account_getImages = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.imageData,\n/**\n * @param {!proto.matcha.imageRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.imageData.deserializeBinary);\n/**\n * @param {!proto.matcha.imageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.imageData>}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.getImages = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Account/getImages', request, metadata || {}, methodDescriptor_Account_getImages);\n};\n/**\n * @param {!proto.matcha.imageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.imageData>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.getImages = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Account/getImages', request, metadata || {}, methodDescriptor_Account_getImages);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.User,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Account_updateUser = new grpc.web.MethodDescriptor('/matcha.Account/updateUser', grpc.web.MethodType.UNARY, proto.matcha.User, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.User} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.User,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Account_updateUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.User} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.updateUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/updateUser', request, metadata || {}, methodDescriptor_Account_updateUser, callback);\n};\n/**\n * @param {!proto.matcha.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.updateUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/updateUser', request, metadata || {}, methodDescriptor_Account_updateUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Account_verifyNewEmail = new grpc.web.MethodDescriptor('/matcha.Account/verifyNewEmail', grpc.web.MethodType.UNARY, proto.matcha.verifyRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.verifyRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Account_verifyNewEmail = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.verifyRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.verifyNewEmail = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/verifyNewEmail', request, metadata || {}, methodDescriptor_Account_verifyNewEmail, callback);\n};\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.verifyNewEmail = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/verifyNewEmail', request, metadata || {}, methodDescriptor_Account_verifyNewEmail);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.imageData,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Account_updateImage = new grpc.web.MethodDescriptor('/matcha.Account/updateImage', grpc.web.MethodType.UNARY, proto.matcha.imageData, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.imageData} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.imageData,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Account_updateImage = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.imageData} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.imageData} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.updateImage = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/updateImage', request, metadata || {}, methodDescriptor_Account_updateImage, callback);\n};\n/**\n * @param {!proto.matcha.imageData} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.updateImage = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/updateImage', request, metadata || {}, methodDescriptor_Account_updateImage);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.browseRequest,\n *   !proto.matcha.User>}\n */\n\n\nconst methodDescriptor_Account_browseUsers = new grpc.web.MethodDescriptor('/matcha.Account/browseUsers', grpc.web.MethodType.SERVER_STREAMING, proto.matcha.browseRequest, proto.matcha.User,\n/**\n * @param {!proto.matcha.browseRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.User.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.browseRequest,\n *   !proto.matcha.User>}\n */\n\nconst methodInfo_Account_browseUsers = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.User,\n/**\n * @param {!proto.matcha.browseRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.User.deserializeBinary);\n/**\n * @param {!proto.matcha.browseRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.browseUsers = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Account/browseUsers', request, metadata || {}, methodDescriptor_Account_browseUsers);\n};\n/**\n * @param {!proto.matcha.browseRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.browseUsers = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Account/browseUsers', request, metadata || {}, methodDescriptor_Account_browseUsers);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.loginRequest,\n *   !proto.matcha.Session>}\n */\n\n\nconst methodDescriptor_Account_loginUser = new grpc.web.MethodDescriptor('/matcha.Account/loginUser', grpc.web.MethodType.UNARY, proto.matcha.loginRequest, proto.matcha.Session,\n/**\n * @param {!proto.matcha.loginRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Session.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.loginRequest,\n *   !proto.matcha.Session>}\n */\n\nconst methodInfo_Account_loginUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Session,\n/**\n * @param {!proto.matcha.loginRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Session.deserializeBinary);\n/**\n * @param {!proto.matcha.loginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Session)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Session>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.loginUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/loginUser', request, metadata || {}, methodDescriptor_Account_loginUser, callback);\n};\n/**\n * @param {!proto.matcha.loginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Session>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.loginUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/loginUser', request, metadata || {}, methodDescriptor_Account_loginUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\n\n\nconst methodDescriptor_Account_getLikedStatus = new grpc.web.MethodDescriptor('/matcha.Account/getLikedStatus', grpc.web.MethodType.UNARY, proto.matcha.userID, proto.matcha.likedStatus,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.likedStatus.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\n\nconst methodInfo_Account_getLikedStatus = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.likedStatus,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.likedStatus.deserializeBinary);\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.likedStatus)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.likedStatus>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.getLikedStatus = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/getLikedStatus', request, metadata || {}, methodDescriptor_Account_getLikedStatus, callback);\n};\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.likedStatus>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.getLikedStatus = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/getLikedStatus', request, metadata || {}, methodDescriptor_Account_getLikedStatus);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\n\n\nconst methodDescriptor_Account_likeUser = new grpc.web.MethodDescriptor('/matcha.Account/likeUser', grpc.web.MethodType.UNARY, proto.matcha.userID, proto.matcha.likedStatus,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.likedStatus.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\n\nconst methodInfo_Account_likeUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.likedStatus,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.likedStatus.deserializeBinary);\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.likedStatus)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.likedStatus>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.likeUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/likeUser', request, metadata || {}, methodDescriptor_Account_likeUser, callback);\n};\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.likedStatus>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.likeUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/likeUser', request, metadata || {}, methodDescriptor_Account_likeUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Account_blockUser = new grpc.web.MethodDescriptor('/matcha.Account/blockUser', grpc.web.MethodType.UNARY, proto.matcha.userID, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Account_blockUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.userID} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.blockUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/blockUser', request, metadata || {}, methodDescriptor_Account_blockUser, callback);\n};\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.blockUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/blockUser', request, metadata || {}, methodDescriptor_Account_blockUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.testing,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Account_test = new grpc.web.MethodDescriptor('/matcha.Account/test', grpc.web.MethodType.UNARY, proto.matcha.testing, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.testing} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.testing,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Account_test = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.testing} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.testing} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.AccountClient.prototype.test = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Account/test', request, metadata || {}, methodDescriptor_Account_test, callback);\n};\n/**\n * @param {!proto.matcha.testing} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.AccountPromiseClient.prototype.test = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Account/test', request, metadata || {}, methodDescriptor_Account_test);\n};\n\nmodule.exports = proto.matcha;","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/src/matcha_grpc_web_pb.js"],"names":["grpc","web","require","proto","matcha","forgotPasswordClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","forgotPasswordPromiseClient","methodDescriptor_forgotPassword_sendEmail","MethodDescriptor","MethodType","UNARY","sendEmailRequest","Reply","request","serializeBinary","deserializeBinary","methodInfo_forgotPassword_sendEmail","AbstractClientBase","MethodInfo","prototype","sendEmail","metadata","callback","rpcCall","unaryCall","methodDescriptor_forgotPassword_resetPassword","resetPassRequest","methodInfo_forgotPassword_resetPassword","resetPassword","createAccountClient","createAccountPromiseClient","methodDescriptor_createAccount_create","createRequest","methodInfo_createAccount_create","create","methodDescriptor_createAccount_verify","verifyRequest","methodInfo_createAccount_verify","verify","AccountClient","AccountPromiseClient","methodDescriptor_Account_getUser","userID","User","methodInfo_Account_getUser","getUser","methodDescriptor_Account_getImages","SERVER_STREAMING","imageRequest","imageData","methodInfo_Account_getImages","getImages","serverStreaming","methodDescriptor_Account_updateUser","methodInfo_Account_updateUser","updateUser","methodDescriptor_Account_verifyNewEmail","methodInfo_Account_verifyNewEmail","verifyNewEmail","methodDescriptor_Account_updateImage","methodInfo_Account_updateImage","updateImage","methodDescriptor_Account_browseUsers","browseRequest","methodInfo_Account_browseUsers","browseUsers","methodDescriptor_Account_loginUser","loginRequest","Session","methodInfo_Account_loginUser","loginUser","methodDescriptor_Account_getLikedStatus","likedStatus","methodInfo_Account_getLikedStatus","getLikedStatus","methodDescriptor_Account_likeUser","methodInfo_Account_likeUser","likeUser","methodDescriptor_Account_blockUser","methodInfo_Account_blockUser","blockUser","methodDescriptor_Account_test","testing","methodInfo_Account_test","test","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for matcha\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n/* eslint-disable */\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.matcha = require('./matcha_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.forgotPasswordClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.forgotPasswordPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.sendEmailRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_forgotPassword_sendEmail = new grpc.web.MethodDescriptor(\n  '/matcha.forgotPassword/sendEmail',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.sendEmailRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.sendEmailRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.sendEmailRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_forgotPassword_sendEmail = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.sendEmailRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.sendEmailRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.forgotPasswordClient.prototype.sendEmail =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.forgotPassword/sendEmail',\n      request,\n      metadata || {},\n      methodDescriptor_forgotPassword_sendEmail,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.sendEmailRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.forgotPasswordPromiseClient.prototype.sendEmail =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.forgotPassword/sendEmail',\n      request,\n      metadata || {},\n      methodDescriptor_forgotPassword_sendEmail);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.resetPassRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_forgotPassword_resetPassword = new grpc.web.MethodDescriptor(\n  '/matcha.forgotPassword/resetPassword',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.resetPassRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.resetPassRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.resetPassRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_forgotPassword_resetPassword = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.resetPassRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.resetPassRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.forgotPasswordClient.prototype.resetPassword =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.forgotPassword/resetPassword',\n      request,\n      metadata || {},\n      methodDescriptor_forgotPassword_resetPassword,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.resetPassRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.forgotPasswordPromiseClient.prototype.resetPassword =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.forgotPassword/resetPassword',\n      request,\n      metadata || {},\n      methodDescriptor_forgotPassword_resetPassword);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.createAccountClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.createAccountPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_createAccount_create = new grpc.web.MethodDescriptor(\n  '/matcha.createAccount/create',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.createRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_createAccount_create = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.createAccountClient.prototype.create =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.createAccount/create',\n      request,\n      metadata || {},\n      methodDescriptor_createAccount_create,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.createAccountPromiseClient.prototype.create =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.createAccount/create',\n      request,\n      metadata || {},\n      methodDescriptor_createAccount_create);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_createAccount_verify = new grpc.web.MethodDescriptor(\n  '/matcha.createAccount/verify',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.verifyRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.verifyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_createAccount_verify = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.verifyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.createAccountClient.prototype.verify =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.createAccount/verify',\n      request,\n      metadata || {},\n      methodDescriptor_createAccount_verify,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.createAccountPromiseClient.prototype.verify =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.createAccount/verify',\n      request,\n      metadata || {},\n      methodDescriptor_createAccount_verify);\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.AccountClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.AccountPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.User>}\n */\nconst methodDescriptor_Account_getUser = new grpc.web.MethodDescriptor(\n  '/matcha.Account/getUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.userID,\n  proto.matcha.User,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.User.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.User>}\n */\nconst methodInfo_Account_getUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.User,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.User.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.User)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.getUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/getUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.User>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.getUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/getUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.imageRequest,\n *   !proto.matcha.imageData>}\n */\nconst methodDescriptor_Account_getImages = new grpc.web.MethodDescriptor(\n  '/matcha.Account/getImages',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.matcha.imageRequest,\n  proto.matcha.imageData,\n  /**\n   * @param {!proto.matcha.imageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.imageData.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.imageRequest,\n *   !proto.matcha.imageData>}\n */\nconst methodInfo_Account_getImages = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.imageData,\n  /**\n   * @param {!proto.matcha.imageRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.imageData.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.imageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.imageData>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.getImages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Account/getImages',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getImages);\n};\n\n\n/**\n * @param {!proto.matcha.imageRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.imageData>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountPromiseClient.prototype.getImages =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Account/getImages',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getImages);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.User,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Account_updateUser = new grpc.web.MethodDescriptor(\n  '/matcha.Account/updateUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.User,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.User} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.User,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Account_updateUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.User} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.updateUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/updateUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_updateUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.User} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.updateUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/updateUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_updateUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Account_verifyNewEmail = new grpc.web.MethodDescriptor(\n  '/matcha.Account/verifyNewEmail',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.verifyRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.verifyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.verifyRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Account_verifyNewEmail = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.verifyRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.verifyNewEmail =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/verifyNewEmail',\n      request,\n      metadata || {},\n      methodDescriptor_Account_verifyNewEmail,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.verifyRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.verifyNewEmail =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/verifyNewEmail',\n      request,\n      metadata || {},\n      methodDescriptor_Account_verifyNewEmail);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.imageData,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Account_updateImage = new grpc.web.MethodDescriptor(\n  '/matcha.Account/updateImage',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.imageData,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.imageData} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.imageData,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Account_updateImage = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.imageData} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.imageData} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.updateImage =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/updateImage',\n      request,\n      metadata || {},\n      methodDescriptor_Account_updateImage,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.imageData} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.updateImage =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/updateImage',\n      request,\n      metadata || {},\n      methodDescriptor_Account_updateImage);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.browseRequest,\n *   !proto.matcha.User>}\n */\nconst methodDescriptor_Account_browseUsers = new grpc.web.MethodDescriptor(\n  '/matcha.Account/browseUsers',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.matcha.browseRequest,\n  proto.matcha.User,\n  /**\n   * @param {!proto.matcha.browseRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.User.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.browseRequest,\n *   !proto.matcha.User>}\n */\nconst methodInfo_Account_browseUsers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.User,\n  /**\n   * @param {!proto.matcha.browseRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.User.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.browseRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.browseUsers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Account/browseUsers',\n      request,\n      metadata || {},\n      methodDescriptor_Account_browseUsers);\n};\n\n\n/**\n * @param {!proto.matcha.browseRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.User>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountPromiseClient.prototype.browseUsers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Account/browseUsers',\n      request,\n      metadata || {},\n      methodDescriptor_Account_browseUsers);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.loginRequest,\n *   !proto.matcha.Session>}\n */\nconst methodDescriptor_Account_loginUser = new grpc.web.MethodDescriptor(\n  '/matcha.Account/loginUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.loginRequest,\n  proto.matcha.Session,\n  /**\n   * @param {!proto.matcha.loginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Session.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.loginRequest,\n *   !proto.matcha.Session>}\n */\nconst methodInfo_Account_loginUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Session,\n  /**\n   * @param {!proto.matcha.loginRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Session.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.loginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Session)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Session>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.loginUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/loginUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_loginUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.loginRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Session>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.loginUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/loginUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_loginUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\nconst methodDescriptor_Account_getLikedStatus = new grpc.web.MethodDescriptor(\n  '/matcha.Account/getLikedStatus',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.userID,\n  proto.matcha.likedStatus,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.likedStatus.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\nconst methodInfo_Account_getLikedStatus = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.likedStatus,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.likedStatus.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.likedStatus)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.likedStatus>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.getLikedStatus =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/getLikedStatus',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getLikedStatus,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.likedStatus>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.getLikedStatus =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/getLikedStatus',\n      request,\n      metadata || {},\n      methodDescriptor_Account_getLikedStatus);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\nconst methodDescriptor_Account_likeUser = new grpc.web.MethodDescriptor(\n  '/matcha.Account/likeUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.userID,\n  proto.matcha.likedStatus,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.likedStatus.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.likedStatus>}\n */\nconst methodInfo_Account_likeUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.likedStatus,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.likedStatus.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.likedStatus)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.likedStatus>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.likeUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/likeUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_likeUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.likedStatus>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.likeUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/likeUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_likeUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.userID,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Account_blockUser = new grpc.web.MethodDescriptor(\n  '/matcha.Account/blockUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.userID,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.userID,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Account_blockUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.userID} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.blockUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/blockUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_blockUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.userID} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.blockUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/blockUser',\n      request,\n      metadata || {},\n      methodDescriptor_Account_blockUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.testing,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Account_test = new grpc.web.MethodDescriptor(\n  '/matcha.Account/test',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.testing,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.testing} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.testing,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Account_test = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.testing} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.testing} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.AccountClient.prototype.test =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Account/test',\n      request,\n      metadata || {},\n      methodDescriptor_Account_test,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.testing} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.AccountPromiseClient.prototype.test =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Account/test',\n      request,\n      metadata || {},\n      methodDescriptor_Account_test);\n};\n\n\nmodule.exports = proto.matcha;\n\n"]},"metadata":{},"sourceType":"module"}