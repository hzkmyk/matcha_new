{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for matcha\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n// eslint-disable\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.matcha = require('./matcha_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.matcha.PersonClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.matcha.PersonPromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\n\n\nconst methodDescriptor_Person_createUser = new grpc.web.MethodDescriptor('/matcha.Person/createUser', grpc.web.MethodType.UNARY, proto.matcha.createRequest, proto.matcha.Reply,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\n\nconst methodInfo_Person_createUser = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.Reply,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.Reply.deserializeBinary);\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.PersonClient.prototype.createUser = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/matcha.Person/createUser', request, metadata || {}, methodDescriptor_Person_createUser, callback);\n};\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\n\n\nproto.matcha.PersonPromiseClient.prototype.createUser = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/matcha.Person/createUser', request, metadata || {}, methodDescriptor_Person_createUser);\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.person>}\n */\n\n\nconst methodDescriptor_Person_getUsers = new grpc.web.MethodDescriptor('/matcha.Person/getUsers', grpc.web.MethodType.SERVER_STREAMING, proto.matcha.createRequest, proto.matcha.person,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.person.deserializeBinary);\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.person>}\n */\n\nconst methodInfo_Person_getUsers = new grpc.web.AbstractClientBase.MethodInfo(proto.matcha.person,\n/**\n * @param {!proto.matcha.createRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.matcha.person.deserializeBinary);\n/**\n * @param {!proto.matcha.createRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.person>}\n *     The XHR Node Readable Stream\n */\n\nproto.matcha.PersonClient.prototype.getUsers = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Person/getUsers', request, metadata || {}, methodDescriptor_Person_getUsers);\n};\n/**\n * @param {!proto.matcha.createRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.person>}\n *     The XHR Node Readable Stream\n */\n\n\nproto.matcha.PersonPromiseClient.prototype.getUsers = function (request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ + '/matcha.Person/getUsers', request, metadata || {}, methodDescriptor_Person_getUsers);\n};\n\nmodule.exports = proto.matcha;","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha_new copy/src/matcha_grpc_web_pb.js"],"names":["grpc","web","require","proto","matcha","PersonClient","hostname","credentials","options","client_","GrpcWebClientBase","hostname_","PersonPromiseClient","methodDescriptor_Person_createUser","MethodDescriptor","MethodType","UNARY","createRequest","Reply","request","serializeBinary","deserializeBinary","methodInfo_Person_createUser","AbstractClientBase","MethodInfo","prototype","createUser","metadata","callback","rpcCall","unaryCall","methodDescriptor_Person_getUsers","SERVER_STREAMING","person","methodInfo_Person_getUsers","getUsers","serverStreaming","module","exports"],"mappings":"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","sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for matcha\n * @enhanceable\n * @public\n */\n\n// GENERATED CODE -- DO NOT EDIT!\n// eslint-disable\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.matcha = require('./matcha_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.PersonClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?Object} options\n * @constructor\n * @struct\n * @final\n */\nproto.matcha.PersonPromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options['format'] = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname;\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodDescriptor_Person_createUser = new grpc.web.MethodDescriptor(\n  '/matcha.Person/createUser',\n  grpc.web.MethodType.UNARY,\n  proto.matcha.createRequest,\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.Reply>}\n */\nconst methodInfo_Person_createUser = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.Reply,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.Reply.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.Error, ?proto.matcha.Reply)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.Reply>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.matcha.PersonClient.prototype.createUser =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/matcha.Person/createUser',\n      request,\n      metadata || {},\n      methodDescriptor_Person_createUser,\n      callback);\n};\n\n\n/**\n * @param {!proto.matcha.createRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.matcha.Reply>}\n *     A native promise that resolves to the response\n */\nproto.matcha.PersonPromiseClient.prototype.createUser =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/matcha.Person/createUser',\n      request,\n      metadata || {},\n      methodDescriptor_Person_createUser);\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.person>}\n */\nconst methodDescriptor_Person_getUsers = new grpc.web.MethodDescriptor(\n  '/matcha.Person/getUsers',\n  grpc.web.MethodType.SERVER_STREAMING,\n  proto.matcha.createRequest,\n  proto.matcha.person,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.person.deserializeBinary\n);\n\n\n/**\n * @const\n * @type {!grpc.web.AbstractClientBase.MethodInfo<\n *   !proto.matcha.createRequest,\n *   !proto.matcha.person>}\n */\nconst methodInfo_Person_getUsers = new grpc.web.AbstractClientBase.MethodInfo(\n  proto.matcha.person,\n  /**\n   * @param {!proto.matcha.createRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.matcha.person.deserializeBinary\n);\n\n\n/**\n * @param {!proto.matcha.createRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.person>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.PersonClient.prototype.getUsers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Person/getUsers',\n      request,\n      metadata || {},\n      methodDescriptor_Person_getUsers);\n};\n\n\n/**\n * @param {!proto.matcha.createRequest} request The request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @return {!grpc.web.ClientReadableStream<!proto.matcha.person>}\n *     The XHR Node Readable Stream\n */\nproto.matcha.PersonPromiseClient.prototype.getUsers =\n    function(request, metadata) {\n  return this.client_.serverStreaming(this.hostname_ +\n      '/matcha.Person/getUsers',\n      request,\n      metadata || {},\n      methodDescriptor_Person_getUsers);\n};\n\n\nmodule.exports = proto.matcha;\n\n"]},"metadata":{},"sourceType":"module"}