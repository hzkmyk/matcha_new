{"ast":null,"code":"var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nimport accepts from 'attr-accept';\nexport var supportMultiple = typeof document !== 'undefined' && document && document.createElement ? 'multiple' in document.createElement('input') : true;\nexport function getDataTransferItems(event) {\n  var dataTransferItemsList = [];\n\n  if (event.dataTransfer) {\n    var dt = event.dataTransfer; // NOTE: Only the 'drop' event has access to DataTransfer.files,\n    // otherwise it will always be empty\n\n    if (dt.files && dt.files.length) {\n      dataTransferItemsList = dt.files;\n    } else if (dt.items && dt.items.length) {\n      // During the drag even the dataTransfer.files is null\n      // but Chrome implements some drag store, which is accesible via dataTransfer.items\n      dataTransferItemsList = dt.items;\n    }\n  } else if (event.target && event.target.files) {\n    dataTransferItemsList = event.target.files;\n  } // Convert from DataTransferItemsList to the native Array\n\n\n  return Array.prototype.slice.call(dataTransferItemsList);\n} // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\n\nexport function fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\nexport function fileMatchSize(file, maxSize, minSize) {\n  return file.size <= maxSize && file.size >= minSize;\n}\nexport function allFilesAccepted(files, accept) {\n  return files.every(function (file) {\n    return fileAccepted(file, accept);\n  });\n}\nexport function isDragDataWithFiles(evt) {\n  if (!evt.dataTransfer) {\n    return true;\n  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n\n\n  return Array.prototype.every.call(evt.dataTransfer.types, function (type) {\n    return type === 'Files' || type === 'application/x-moz-file';\n  });\n}\nexport function isKindFile(item) {\n  return (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && item !== null && item.kind === 'file';\n} // allow the entire document to be a drag target\n\nexport function onDocumentDragOver(evt) {\n  evt.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf('Edge/') !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n  return isIe(userAgent) || isEdge(userAgent);\n}","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/node_modules/react-dropzone/dist/es/utils/index.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","accepts","supportMultiple","document","createElement","getDataTransferItems","event","dataTransferItemsList","dataTransfer","dt","files","length","items","target","Array","slice","call","fileAccepted","file","accept","type","fileMatchSize","maxSize","minSize","size","allFilesAccepted","every","isDragDataWithFiles","evt","types","isKindFile","item","kind","onDocumentDragOver","preventDefault","isIe","userAgent","indexOf","isEdge","isIeOrEdge","arguments","undefined","window","navigator"],"mappings":"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","sourcesContent":["var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nimport accepts from 'attr-accept';\n\nexport var supportMultiple = typeof document !== 'undefined' && document && document.createElement ? 'multiple' in document.createElement('input') : true;\n\nexport function getDataTransferItems(event) {\n  var dataTransferItemsList = [];\n  if (event.dataTransfer) {\n    var dt = event.dataTransfer;\n\n    // NOTE: Only the 'drop' event has access to DataTransfer.files,\n    // otherwise it will always be empty\n    if (dt.files && dt.files.length) {\n      dataTransferItemsList = dt.files;\n    } else if (dt.items && dt.items.length) {\n      // During the drag even the dataTransfer.files is null\n      // but Chrome implements some drag store, which is accesible via dataTransfer.items\n      dataTransferItemsList = dt.items;\n    }\n  } else if (event.target && event.target.files) {\n    dataTransferItemsList = event.target.files;\n  }\n\n  // Convert from DataTransferItemsList to the native Array\n  return Array.prototype.slice.call(dataTransferItemsList);\n}\n\n// Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with\n// that MIME type will always be accepted\nexport function fileAccepted(file, accept) {\n  return file.type === 'application/x-moz-file' || accepts(file, accept);\n}\n\nexport function fileMatchSize(file, maxSize, minSize) {\n  return file.size <= maxSize && file.size >= minSize;\n}\n\nexport function allFilesAccepted(files, accept) {\n  return files.every(function (file) {\n    return fileAccepted(file, accept);\n  });\n}\n\nexport function isDragDataWithFiles(evt) {\n  if (!evt.dataTransfer) {\n    return true;\n  }\n  // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types\n  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file\n  return Array.prototype.every.call(evt.dataTransfer.types, function (type) {\n    return type === 'Files' || type === 'application/x-moz-file';\n  });\n}\n\nexport function isKindFile(item) {\n  return (typeof item === 'undefined' ? 'undefined' : _typeof(item)) === 'object' && item !== null && item.kind === 'file';\n}\n\n// allow the entire document to be a drag target\nexport function onDocumentDragOver(evt) {\n  evt.preventDefault();\n}\n\nfunction isIe(userAgent) {\n  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;\n}\n\nfunction isEdge(userAgent) {\n  return userAgent.indexOf('Edge/') !== -1;\n}\n\nexport function isIeOrEdge() {\n  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;\n\n  return isIe(userAgent) || isEdge(userAgent);\n}"]},"metadata":{},"sourceType":"module"}