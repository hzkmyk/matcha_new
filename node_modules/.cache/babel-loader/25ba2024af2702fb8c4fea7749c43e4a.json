{"ast":null,"code":"var _jsxFileName = \"/Users/hazukimiyake/Documents/matcha/src/Test/index.js\";\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\n\nconst {\n  AccountClient\n} = require('../matcha_grpc_web_pb');\n\nconst {\n  imageRequest\n} = require('../matcha_pb');\n\nclass Test extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getImages = () => {\n      return new Promise((resolve, reject) => {\n        const client = new AccountClient('http://10.43.1.110:8080');\n        const request = new imageRequest();\n        request.setUserid(3);\n        request.setCount(2);\n        const stream = client.getImages(request, {});\n        console.log(\"hh\");\n        stream.on('imageData', function (response) {\n          console.log(response.getImage_asB64());\n          const d = response.getImage_asB64();\n          resolve(d);\n        });\n      });\n    };\n\n    this.allSet = async () => {\n      try {\n        const data = await this.getImages();\n        this.setState({\n          data\n        });\n      } catch (error) {\n        console.log(error.response);\n      }\n    };\n\n    this.state = {\n      data: ''\n    };\n  }\n\n  componentDidMount() {\n    this.allSet();\n  }\n\n  render() {\n    const image = this.state.data;\n\n    const Example = ({\n      data\n    }) => React.createElement(\"img\", {\n      src: `data:image/jpeg;base64,${data}`,\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    });\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Example, {\n      data: image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"test page\"));\n  }\n\n}\n\nexport default withCookies(Test);","map":{"version":3,"sources":["/Users/hazukimiyake/Documents/matcha/src/Test/index.js"],"names":["React","Component","withCookies","AccountClient","require","imageRequest","Test","constructor","props","getImages","Promise","resolve","reject","client","request","setUserid","setCount","stream","console","log","on","response","getImage_asB64","d","allSet","data","setState","error","state","componentDidMount","render","image","Example"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,cAA5B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAoBC,OAAO,CAAC,uBAAD,CAAjC;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAmBD,OAAO,CAAC,cAAD,CAAhC;;AAEA,MAAME,IAAN,SAAmBL,SAAnB,CAA6B;AAC5BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;;AADkB,SAOnBC,SAPmB,GAOP,MAAM;AACjB,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACvC,cAAMC,MAAM,GAAG,IAAIV,aAAJ,CAAkB,yBAAlB,CAAf;AACA,cAAMW,OAAO,GAAG,IAAIT,YAAJ,EAAhB;AACAS,QAAAA,OAAO,CAACC,SAAR,CAAkB,CAAlB;AACAD,QAAAA,OAAO,CAACE,QAAR,CAAiB,CAAjB;AACA,cAAMC,MAAM,GAAGJ,MAAM,CAACJ,SAAP,CAAiBK,OAAjB,EAA0B,EAA1B,CAAf;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACAF,QAAAA,MAAM,CAACG,EAAP,CAAU,WAAV,EAAuB,UAASC,QAAT,EAAmB;AAEzCH,UAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,cAAT,EAAZ;AACA,gBAAMC,CAAC,GAAGF,QAAQ,CAACC,cAAT,EAAV;AACAX,UAAAA,OAAO,CAACY,CAAD,CAAP;AACA,SALD;AAMA,OAbM,CAAP;AAcA,KAtBkB;;AAAA,SAwCnBC,MAxCmB,GAwCV,YAAY;AACpB,UAAI;AACH,cAAMC,IAAI,GAAG,MAAM,KAAKhB,SAAL,EAAnB;AACA,aAAKiB,QAAL,CAAc;AAACD,UAAAA;AAAD,SAAd;AACA,OAHD,CAGE,OAAME,KAAN,EAAa;AACdT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,KAAK,CAACN,QAAlB;AACA;AACD,KA/CkB;;AAElB,SAAKO,KAAL,GAAa;AACZH,MAAAA,IAAI,EAAE;AADM,KAAb;AAGA;;AA4CDI,EAAAA,iBAAiB,GAAG;AACnB,SAAKL,MAAL;AACA;;AAEDM,EAAAA,MAAM,GAAG;AACR,UAAMC,KAAK,GAAG,KAAKH,KAAL,CAAWH,IAAzB;;AACA,UAAMO,OAAO,GAAI,CAAC;AAAEP,MAAAA;AAAF,KAAD,KAAc;AAAK,MAAA,GAAG,EAAG,0BAAyBA,IAAK,EAAzC;AAA4C,MAAA,GAAG,EAAC,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA/B;;AACA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEM,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFD,CADD;AAMA;;AA/D2B;;AAkE7B,eAAe7B,WAAW,CAACI,IAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nconst { AccountClient } = require('../matcha_grpc_web_pb');\nconst { imageRequest } = require('../matcha_pb');\n\nclass Test extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tdata: ''\n\t\t}\n\t}\n\t\n\tgetImages = () => {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tconst client = new AccountClient('http://10.43.1.110:8080');\n\t\t\tconst request = new imageRequest();\n\t\t\trequest.setUserid(3);\n\t\t\trequest.setCount(2);\n\t\t\tconst stream = client.getImages(request, {});\n\t\t\tconsole.log(\"hh\")\n\t\t\tstream.on('imageData', function(response) {\n\t\t\t\t\n\t\t\t\tconsole.log(response.getImage_asB64());\n\t\t\t\tconst d = response.getImage_asB64();\n\t\t\t\tresolve(d);\n\t\t\t});\n\t\t})\n\t}\n\t\n\t// getImages = () => {\n\t// \treturn new Promise((resolve, reject) => {\n\t// \t\tconst client = new AccountClient('http://localhost:8080');\n\t// \t\tconst request = new imageData();\n\t// \t\tclient.imageTest(request, {}, (err, reply) => {\n\t// \t\t\t\tif (err) {\n\t// \t\t\t\t\tconsole.log(err.code);\n\t// \t\t\t\t\tconsole.log(err.message);\n\t// \t\t\t\t} else {\n\t// \t\t\t\t\tconst data = reply.getImage_asB64();\n\t// \t\t\t\t\tresolve(data);\n\t// \t\t\t\t}\n\t// \t\t\t})\n\t// \t})\n\t// }\n\t\n\tallSet = async () => {\n\t\ttry {\n\t\t\tconst data = await this.getImages();\n\t\t\tthis.setState({data})\n\t\t} catch(error) {\n\t\t\tconsole.log(error.response);\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.allSet();\n\t}\n\t\t\n\trender() {\n\t\tconst image = this.state.data;\n\t\tconst Example =  ({ data }) => <img src={`data:image/jpeg;base64,${data}`} alt='' />\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Example data={image} />\n\t\t\t\t<div>test page</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withCookies(Test);"]},"metadata":{},"sourceType":"module"}